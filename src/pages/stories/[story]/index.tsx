
import { GetServerSideProps } from 'next'
import Head from 'next/head'
import styles from '@/styles/Home.module.css'
import { useState } from 'react'
import type { Story } from '@/models/story'

type Props = {
  storyId: string
  story: Story
}

export const getServerSideProps: GetServerSideProps<Props> = async ({query}) => {
    if(!(typeof query.story === "string")){
      throw new Error("story is not string")
    }
    const getStory = (await import('@/models/getStory')).getStory
    const story = await getStory(query.story);
    return {
      props: {
        storyId: query.story,
        story
      }
    }
}

export default function Home(props: Props) {
  const [prompt, setPrompt] = useState<string>('');
  const [response, setResponse] = useState<string>('');
  const [debugMode, setDebugMode] = useState<boolean>(false);
  const sendQuestion = () => {
    setResponse("送信中")
    fetch(`/api/stories/${props.storyId}/question`,{
      method: "POST",
      body: JSON.stringify({prompt,debugMode}),
    }).then(e => {
      return e.json()
    }).then(e => {
      setResponse(e.answer)
    })
  }
  const sendCorrectAnswer = () => {
    setResponse("送信中")
    fetch(`/api/stories/${props.storyId}/correct`,{
      method: "POST",
      body: JSON.stringify({prompt,debugMode}),
    }).then(e => {
      return e.json()
    }).then(e => {
      setResponse(e.answer)
    })
  }
  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={styles.main}>
        <h1 className={styles.title}>
          {props.story.title}
        </h1>
        <p>{props.story.question}</p>
        <textarea onChange={e => {
          setPrompt(e.target.value)
        }} value={prompt}></textarea>
        <p>{response}</p>
        <div style={{display:"flex",gap: "4px"}}>
          <button onClick={sendQuestion}>質問を送信</button>
          <button onClick={sendCorrectAnswer}>正解を送信</button>
          <label>
            デバッグモード
            <input type="checkbox" onChange={e => {
            setDebugMode(e.target.checked);
          }}></input>
          </label>
        </div>
      </main>
    </>
  )
}
